# source: https://formal.iti.kit.edu/projects/improve/reve/?ex=loop%2Fbarthe
# requires bound >= 15

# let c =-1: x = 1/2 (-1 + i) (-12 + 5 i) = 6 - (17 i)/2 + (5 i^2)/2
# let c = 0: x = 5/2 (-2 + i) (-1 + i)    = 5 - (15 i)/2 + (5 i^2)/2
# let c = 1: x = 1/2 (-1 + i) (-8 + 5 i)  = 4 - (13 i)/2 + (5 i^2)/2
# let c = 2: x = 1/2 (-1 + i) (-6 + 5 i)  = 3 - (11 i)/2 + (5 i^2)/2
# let c = 3: x = 1/2 (-1 + i) (-4 + 5 i)  = 2 - ( 9 i)/2 + (5 i^2)/2
# let c = 4: x = 1/2 (-1 + i) (-2 + 5 i)  = 1 - ( 7 i)/2 + (5 i^2)/2
# let c = 5: x = 1/2 (-1 + i) ( 0 + 5 i)  = 0 - ( 5 i)/2 + (5 i^2)/2
# let c = 6: x = 1/2 (-1 + i) ( 2 + 5 i)  =-1 - ( 3 n)/2 + (5 n^2)/2
# hypothesis: x = (5-c) - ((15-(2*c))*i)/2 + (5*i^2)/2

# let c = 0: 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50
# let c = 1: 1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51
# let c = 2: 2, 7, 12, 17, 22, 27, 32, 37, 42, 47, 52
# hypothesis: j = c + 5*i

fun nc ->
  let (n, c) = nc in
  let (n, c) = (1000000000,500) in
  ref i = 0 in
  ref j = 0 in
  ref x = 0 in
  let rec while _ =
    if (!i < n) then
      ( _sync_ {wi,wx,wj1,wj2 | i as wi; x as wx; j as wj1
               | wx == ((5-c)-((15-(2*c))*(wi+1))/2 + (5*(wi+1)*(wi+1))/2)
               && (wi >= 0) && (wi < n)
               && ((wi > 0) => (wj1 = c+(wi-1)*5) || ((wi <= 0) => (wj1 = 0)))} ();
        j := 5 * !i + c;
        x := !x + !j;
        i := !i + 1;
        while ())
    else ()
  in while ();
  !x
  
|||_(int * int)-> int

fun nc ->
  let (n, c) = nc in
  let (n, c) = (1000000000,500) in
  ref i = 0 in
  ref j = c in
  ref x = 0 in
  let rec while _ =
    if (!i < n) then
      ( _sync_ {wi,wx,wj1,wj2 | i as wi; x as wx; j as wj2
               | (wj2 == c+wi * 5) } ();
        x := !x + !j;
        j := !j + 5;
        i := !i + 1;
        while ())
    else ()
  in while ();
  !x

