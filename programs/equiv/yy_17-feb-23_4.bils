# Example to test lists. Testing list pattern matching. 
# Can't disagree because either a or b are empty, or empty list is returned.

fun f -> fun ab -> fun c ->
let (a,b) = ab in
match a with
| [] -> (f (c::[])) == (f (c::a))
| x :: xs -> (f (c::a)) == f (c::a)

|||_(bool list -> bool list) -> ((bool list) * (bool list)) -> bool -> bool

fun f -> fun ab -> fun c ->
let (a,b) = ab in
match b with
| [] -> (f (c::a)) == (f (c::a))
| x :: xs -> (f (c::a)) == (f (c::a))
