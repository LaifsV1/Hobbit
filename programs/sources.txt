ex1: up to techniques notes.
 v1-ineq: [success] Ineq Bound 4.

ex2: up to techniques notes
 v1-e1: [success] Ineq Bound 2.
 v1-e2: [success] Ineq Bound 2.
 [fixed] find errors for the "safe" versions too...
 (fixed TRUE/FALSE mixup)

ex3.4: From Applicative to Environmental Bisimulation, MFPS2011
  e: [success] Ineq Bound 2.

ex3.5: From Applicative to Environmental Bisimulation, MFPS2011
  e: [success] Ineq Bound 2.

ex4: (this is exE10 in my files)
  v1-ineq: [success] Ineq Bound 2.
  v2-ineq: [success] Ineq Bound 3.
  v3-ineq: [success] Ineq Bound 4.
  v4-ineq: [success] Ineq Bound 5.
  v5-ineq: [success] Ineq Bound 6.

syteci: http://guilhem.jaber.fr/syteci/
  all are safe programs.
  call-lock: [bounded success]
             [this is fine] then branch needs brackets when `;` is involved.
             [fixed] tool reports "program not closed".
             was bug refreshing things inside let bindings.
  fact: [fixed] parsing error with `let rec`.
        we now have `let rec`.
        [TODO] needs symbolic reasoning.
  fact-state: [fixed] parsing error with `let rec`.
              we now have `let rec`.
              [TODO] needs symbolic reasoning.
  irreverse-state: no errors found.
  rep-ind: [bounded success]
           [fixed] Ineq Bound 4. Program is supposed to be safe.
           this was an innequiv. One had to decrement.
  well-bracket-state: no errors found.
  
rivcp: based on Relational interprocedural verification of concurrent programs
       (Bertrand Jeannet), SEFM09.
  e: [success] Ineq Bound 35

pitts: Operationally-Based Theories of Program Equivalence (Pitts),
       Semantics and Logics of Computation (1997).
  3.11: lists implemented using lambdas.
    v1: [bounded success]
        [fixed] program not closed.
    v2: [bounded success]
        [fixed] Eq Bound 1. flag for bound wasn't raised in internal moves.
        [fixed] program not closed.
  3.14: [bounded success] no errors found (working as intended).
        [TODO] Maybe add exercises 3.39, 3.40, 3.41, 3.42, 3.43...

pitts: Operational Semantics and Program Equivalence (Pitts), APPSEM 2000.
  2(1)(2): [success] Eq Bound 2.
  
holik: https://github.com/LaifsV1/HOLiK/tree/master/HOLi/programs
  reentrancy: Ineq Bound 2.
  flat-combiner: [fixed] parsing error on `let rec`, we now have let rec.
                 [fixed] still reports `program not closed`.
                 v1: [problem] doesn't find error.
                 v2: [success] Ineq Bound 6.
  file-lock-param: [success] Ineq Bound 31.
