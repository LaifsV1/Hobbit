- fact-tail-rec: internal recursion.
- hector-pitts stark: hard problem, like well-bracketing
- hector-thamsborg: hard problem, like well-bracketing
- mccarthy examples: internal recursion. 
- mult: internal recursion. would need arg gen.
- mult2: internal recursion. would need arg gen.
- pitts-3.11: internal recursion.
- pitts-3.11v2: internal recursion.
- reve examples: internal recursion.
- rvt-id: internal recursion.
- rvt-value: internal recursion. needs internal call synch/arg gen.
- state-dependent-1: NO IDEA
- symb-const-5: internal recursion, we could stop this if we memoised internal configs or added synchronisation.
- syteci-fact: internal recursion. could solve with generalisation of arguments and synchronisation.
- syteci-fact-state: internal recursion. same as above.
- syteci-iterator: internal recursion. would need sync/internal gen/gen of arguments.
- syteci-iterator-unfold: internal recursion. would need sync/internal gen/gen of arguments.
- takenuchi-knuth: internal recursion. solvable with generalised arguments.



- generalisation of arguments is trickier to implement than expected.
  we would need to implement a new language for them, similar to how we did generalisations. This involves the parser, type checker, and other problems.
  additionally, we would have to decide to generalise them differently to what we currently do with store. We can only generalise arguments at the start of a function call, not in the middle or return.
  Plus, without internal memoisation, it wouldn't be too useful.
